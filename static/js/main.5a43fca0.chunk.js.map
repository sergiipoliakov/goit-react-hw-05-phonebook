{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Layout/Layout.module.css","components/Title/Title.module.css","components/Button/Button.module.css","components/Title/Title.js","components/Layout/Layout.js","components/DublicateAlert/DublicateAlert.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Title","label","className","styles","title","Layout","children","layout","CSSTransition","in","appear","timeout","classNames","unmountOnExit","DublicateAlert","name","Button","type","onClick","button","ContactForm","state","number","dublicateName","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","filter","contact","elements","length","setTimeout","onAddContact","this","Boolean","onSubmit","onChange","Component","defaultProps","Filter","onChangeFilter","ContactListItem","id","onRemove","item","actions","ContactList","onRemoveContact","TransitionGroup","component","map","App","addContact","data","uuid_v4","prevState","removeContact","contactId","changeFilter","getFilteredName","toLowerCase","includes","prevProps","localStorage","setItem","JSON","stringify","getItem","parsContacts","parse","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a43fca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2THQn\",\"actions\":\"ContactListItem_actions__2eHF6\",\"name\":\"ContactListItem_name__32Yb3\",\"number\":\"ContactListItem_number__3CKnU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3PvPc\",\"appear\":\"Layout_appear__28yHE\",\"appearActive\":\"Layout_appearActive__28_al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1jlrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","import PropTypes from 'prop-types';\n\nimport styles from './Title.module.css';\n\nconst Title = ({ label }) => <h1 className={styles.title}>{label}</h1>;\n\nTitle.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport Title from '../Title/Title';\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './Layout.module.css';\n\nconst Layout = ({ children }) => (\n  <div className={styles.layout}>\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={styles}\n      unmountOnExit\n    >\n      <Title label=\"Phonebook\" />\n    </CSSTransition>\n    {children}\n  </div>\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './DublicateAlert.css';\n\nexport default function DublicateAlert({ name = 'no name' }) {\n  return (\n    <div className=\"dublucate-name\">\n      <p>\"{name}\" is already in contacts</p>\n    </div>\n  );\n}\n\nDublicateAlert.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nconst Button = ({ label, type = 'button', onClick = () => null }) => (\n  <button className={styles.button} type={type} onClick={onClick}>\n    {label}\n  </button>\n);\n\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DublicateAlert from '../DublicateAlert/DublicateAlert';\nimport Button from '../Button/Button';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './ContactForm.css';\n\nexport default class ContactForm extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    name: '',\n    number: '',\n    dublicateName: false,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicate = this.props.contacts.filter(\n      contact => contact.name === e.target.elements[0].value,\n    );\n    if (duplicate.length) {\n      this.setState({ dublicateName: !this.state.dublicateName });\n\n      return setTimeout(() => {\n        this.setState({\n          dublicateName: false,\n        });\n      }, 2500);\n\n      // return alert(`${duplicate[0].name} is already in contacts`);\n    }\n\n    this.props.onAddContact(this.state);\n\n    this.setState({ name: '', number: '', dublicateName: false });\n  };\n\n  render() {\n    const { name, number, dublicateName } = this.state;\n\n    return (\n      <>\n        <CSSTransition\n          in={dublicateName && Boolean(name)}\n          classNames=\"dublucate-name-slideIn\"\n          timeout={250}\n          unmountOnExit\n        >\n          <DublicateAlert name={name} />\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <label className=\"form-label\">\n            Name\n            <input\n              className=\"form-input\"\n              type=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n\n          <label className=\"form-label\">\n            Number\n            <input\n              className=\"form-input\"\n              type=\"tel\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n\n          <Button label=\"Add contact\" type=\"submit\" />\n        </form>\n      </>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport './Filter.css';\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className=\"form\">\n      <label className=\"form-label\">\n        Find contact by name\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: 'noName',\n  number: '123 45 67',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n\n  onChangeFilter: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => (\n  <li key={id} className={styles.item}>\n    <p className={styles.name}>{name}: </p>\n    <div className={styles.actions}>\n      <p className={styles.number}>{number}</p>\n      <Button\n        label=\"Delete\"\n        type=\"button\"\n        className=\"ContactList-button\"\n        onClick={onRemove}\n      />\n    </div>\n  </li>\n);\n\nexport default ContactListItem;\n\nContactListItem.defaultProps = {\n  name: 'noName',\n  number: '123 45 67',\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Title from '../Title/Title';\nimport './ContactList.css';\n\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <>\n    <CSSTransition\n      in={contacts.length > 0}\n      timeout={500}\n      classNames=\"ContactList-title-slideIn\"\n      unmountOnExit\n    >\n      <Title label=\"Contacts\" />\n    </CSSTransition>\n\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={250}\n          classNames=\"ContactList-item-fade\"\n        >\n          <ContactListItem\n            id={id}\n            name={name}\n            number={number}\n            onRemove={() => onRemoveContact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      number: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n  onRemoveContact: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuid_v4 } from 'uuid';\nimport Layout from './components/Layout';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nimport { CSSTransition } from 'react-transition-group';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n\n    const parsContacts = JSON.parse(contacts);\n\n    if (parsContacts) {\n      this.setState({ contacts: parsContacts });\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addContact = data => {\n    const contact = {\n      id: uuid_v4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredName = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    const filteredContacts = this.getFilteredName();\n\n    return (\n      <Layout>\n        <ContactForm onAddContact={this.addContact} contacts={contacts} />\n\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={500}\n          classNames=\"filter-slideIn\"\n          unmountOnExit\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n\n        <ContactList\n          contacts={filteredContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}